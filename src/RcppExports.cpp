// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// rate_m_cpp
Rcpp::List rate_m_cpp(Rcpp::NumericVector state, Rcpp::NumericVector params, Rcpp::CharacterVector maleTypePrefix);
RcppExport SEXP debugIIT_rate_m_cpp(SEXP stateSEXP, SEXP paramsSEXP, SEXP maleTypePrefixSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type state(stateSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type params(paramsSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type maleTypePrefix(maleTypePrefixSEXP);
    rcpp_result_gen = Rcpp::wrap(rate_m_cpp(state, params, maleTypePrefix));
    return rcpp_result_gen;
END_RCPP
}
// rate_f_cpp
Rcpp::List rate_f_cpp(Rcpp::NumericVector state, Rcpp::NumericVector params, Rcpp::CharacterVector femaleTypePrefix, Rcpp::CharacterVector mateTypeSuffix, Rcpp::CharacterVector allMateTypes);
RcppExport SEXP debugIIT_rate_f_cpp(SEXP stateSEXP, SEXP paramsSEXP, SEXP femaleTypePrefixSEXP, SEXP mateTypeSuffixSEXP, SEXP allMateTypesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type state(stateSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type params(paramsSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type femaleTypePrefix(femaleTypePrefixSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type mateTypeSuffix(mateTypeSuffixSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type allMateTypes(allMateTypesSEXP);
    rcpp_result_gen = Rcpp::wrap(rate_f_cpp(state, params, femaleTypePrefix, mateTypeSuffix, allMateTypes));
    return rcpp_result_gen;
END_RCPP
}
// rate_imm_cpp
Rcpp::List rate_imm_cpp(Rcpp::NumericVector state, Rcpp::NumericVector params, Rcpp::CharacterVector immatureType, Rcpp::NumericVector immatureClassNumber, Rcpp::CharacterVector allImmatureTypes);
RcppExport SEXP debugIIT_rate_imm_cpp(SEXP stateSEXP, SEXP paramsSEXP, SEXP immatureTypeSEXP, SEXP immatureClassNumberSEXP, SEXP allImmatureTypesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type state(stateSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type params(paramsSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type immatureType(immatureTypeSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type immatureClassNumber(immatureClassNumberSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type allImmatureTypes(allImmatureTypesSEXP);
    rcpp_result_gen = Rcpp::wrap(rate_imm_cpp(state, params, immatureType, immatureClassNumber, allImmatureTypes));
    return rcpp_result_gen;
END_RCPP
}
// getRates_cpp
Rcpp::List getRates_cpp(Rcpp::NumericVector state, Rcpp::NumericVector params, Rcpp::CharacterVector allPrefixTypes);
RcppExport SEXP debugIIT_getRates_cpp(SEXP stateSEXP, SEXP paramsSEXP, SEXP allPrefixTypesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type state(stateSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type params(paramsSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type allPrefixTypes(allPrefixTypesSEXP);
    rcpp_result_gen = Rcpp::wrap(getRates_cpp(state, params, allPrefixTypes));
    return rcpp_result_gen;
END_RCPP
}
// simulateCTMC_cpp
Rcpp::List simulateCTMC_cpp(Rcpp::NumericVector R_state, Rcpp::CharacterVector R_types, Rcpp::NumericVector R_params, Rcpp::NumericVector R_startTime, Rcpp::NumericVector R_endTime, Rcpp::NumericVector maxSize, bool store);
RcppExport SEXP debugIIT_simulateCTMC_cpp(SEXP R_stateSEXP, SEXP R_typesSEXP, SEXP R_paramsSEXP, SEXP R_startTimeSEXP, SEXP R_endTimeSEXP, SEXP maxSizeSEXP, SEXP storeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type R_state(R_stateSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type R_types(R_typesSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type R_params(R_paramsSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type R_startTime(R_startTimeSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type R_endTime(R_endTimeSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type maxSize(maxSizeSEXP);
    Rcpp::traits::input_parameter< bool >::type store(storeSEXP);
    rcpp_result_gen = Rcpp::wrap(simulateCTMC_cpp(R_state, R_types, R_params, R_startTime, R_endTime, maxSize, store));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"debugIIT_rate_m_cpp", (DL_FUNC) &debugIIT_rate_m_cpp, 3},
    {"debugIIT_rate_f_cpp", (DL_FUNC) &debugIIT_rate_f_cpp, 5},
    {"debugIIT_rate_imm_cpp", (DL_FUNC) &debugIIT_rate_imm_cpp, 5},
    {"debugIIT_getRates_cpp", (DL_FUNC) &debugIIT_getRates_cpp, 3},
    {"debugIIT_simulateCTMC_cpp", (DL_FUNC) &debugIIT_simulateCTMC_cpp, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_debugIIT(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
